// <auto-generated />
using System;
using BeyondCreator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeyondCreator.Migrations
{
    [DbContext(typeof(BeyondCreatorContext))]
    partial class BeyondCreatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeyondCreator.Models.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorBonus")
                        .HasColumnType("int");

                    b.Property<int>("ArmorMaterialLvl")
                        .HasColumnType("int");

                    b.Property<string>("ArmorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Armor", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Advantage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advantage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advantage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArmsArmour")
                        .HasColumnType("int");

                    b.Property<int>("BodyArmour")
                        .HasColumnType("int");

                    b.Property<int>("BonusArmour")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<string>("Disadvantage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disadvantage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disadvantage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("HeadArmour")
                        .HasColumnType("int");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("Intellegence")
                        .HasColumnType("int");

                    b.Property<int>("LegsArmour")
                        .HasColumnType("int");

                    b.Property<int>("Lvl")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perseption")
                        .HasColumnType("int");

                    b.Property<string>("PlayersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.Property<int>("Will")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Dice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dice", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Ritual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ritual", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Spell", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Thing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thing", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<int>("Hardness")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeaponLvl")
                        .HasColumnType("int");

                    b.Property<int>("WeaponMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterID");

                    b.HasIndex("WeaponMaterialId");

                    b.HasIndex("WeaponTypeID");

                    b.ToTable("Weapon", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialLvl")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeaponMaterial", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiceId");

                    b.ToTable("WeaponProperty", (string)null);
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackDist")
                        .HasColumnType("int");

                    b.Property<int>("AttackDistance")
                        .HasColumnType("int");

                    b.Property<int>("AttackType")
                        .HasColumnType("int")
                        .HasColumnName("Attack_type");

                    b.Property<int>("AvailabilityLevel")
                        .HasColumnType("int");

                    b.Property<int>("BaseCraftDifficulty")
                        .HasColumnType("int");

                    b.Property<int>("BasePrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiceId");

                    b.ToTable("WeaponType", (string)null);
                });

            modelBuilder.Entity("WeaponPropertyWeaponType", b =>
                {
                    b.Property<int>("WeaponPropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponTypesId")
                        .HasColumnType("int");

                    b.HasKey("WeaponPropertiesId", "WeaponTypesId");

                    b.HasIndex("WeaponTypesId");

                    b.ToTable("WeaponPropertyWeaponType");
                });

            modelBuilder.Entity("WeaponWeaponProperty", b =>
                {
                    b.Property<int>("WeaponPropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("int");

                    b.HasKey("WeaponPropertiesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("WeaponWeaponProperty");
                });

            modelBuilder.Entity("BeyondCreator.Models.Character", b =>
                {
                    b.HasOne("BeyondCreator.Models.Image", "Image")
                        .WithOne("Character")
                        .HasForeignKey("BeyondCreator.Models.Character", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("BeyondCreator.Models.Weapon", b =>
                {
                    b.HasOne("BeyondCreator.Models.Character", "Character")
                        .WithMany("Weapons")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeyondCreator.Models.WeaponMaterial", "WeaponMaterial")
                        .WithMany("Weapons")
                        .HasForeignKey("WeaponMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeyondCreator.Models.WeaponType", "WeaponType")
                        .WithMany("Weapons")
                        .HasForeignKey("WeaponTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("WeaponMaterial");

                    b.Navigation("WeaponType");
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponProperty", b =>
                {
                    b.HasOne("BeyondCreator.Models.Dice", null)
                        .WithMany("WeaponProperties")
                        .HasForeignKey("DiceId");
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponType", b =>
                {
                    b.HasOne("BeyondCreator.Models.Dice", "Dice")
                        .WithMany()
                        .HasForeignKey("DiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dice");
                });

            modelBuilder.Entity("WeaponPropertyWeaponType", b =>
                {
                    b.HasOne("BeyondCreator.Models.WeaponProperty", null)
                        .WithMany()
                        .HasForeignKey("WeaponPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeyondCreator.Models.WeaponType", null)
                        .WithMany()
                        .HasForeignKey("WeaponTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponWeaponProperty", b =>
                {
                    b.HasOne("BeyondCreator.Models.WeaponProperty", null)
                        .WithMany()
                        .HasForeignKey("WeaponPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeyondCreator.Models.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeyondCreator.Models.Character", b =>
                {
                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("BeyondCreator.Models.Dice", b =>
                {
                    b.Navigation("WeaponProperties");
                });

            modelBuilder.Entity("BeyondCreator.Models.Image", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponMaterial", b =>
                {
                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("BeyondCreator.Models.WeaponType", b =>
                {
                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
